# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19nzm8Oz_GlXhO3m-rBZze-2QTrf4pf8r

# Artificial Neural Network **Combined Cycle Power Plant**

## Part 1 - Data Preprocessing

### Importing the libraries
"""

import numpy as np
import pandas as pd
import tensorflow as tf

tf.__version__

"""### Importing the dataset"""

dataset = pd.read_excel('Folds5x2_pp.xlsx')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

print(X[0,:])
print(y[0])

"""### Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

print(X_train)
np.size(X_train)

np.size(X_test)

np.size(X_train)

np.size(y_test)

np.size(y_train)

"""## Part 2 - Building the ANN

### Initializing the ANN
"""

ann = tf.keras.models.Sequential()

"""### Adding the input layer and the first hidden layer"""

ann.add(tf.keras.layers.Dense(units=6, activation='relu'))

#print(ann.output_shape)
print(ann.compute_output_signature)

"""### Adding the second hidden layer"""

ann.add(tf.keras.layers.Dense(units=6, activation='relu'))

print(ann.compute_output_signature)

"""### Adding the output layer"""

ann.add(tf.keras.layers.Dense(units=1))

"""## Part 3 - Training the ANN

### Compiling the ANN
"""

ann.compile(optimizer='adam', loss='mean_squared_error')

"""### Training the ANN model on the Training set"""

ann.fit(X_train,y_train,batch_size=32, epochs=150)

"""### Predicting the results of the Test set"""

y_pred= ann.predict(X_test)
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

print(np.concatenate((y_pred.reshape(1,len(y_pred)), y_test.reshape(1, len(y_test))),0))

from google.colab import drive
drive.mount('/content/drive')